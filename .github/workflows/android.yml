name: Android CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches:
      - '**'

env:
  SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
  GOOGLE_SERVICES_JSON_DEV: ${{ secrets.GOOGLE_SERVICES_JSON_DEV  }}

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Access SPOTIFY_CLIENT_ID
        run: echo $SPOTIFY_CLIENT_ID | base64 --decode --ignore-garbage > ./local.properties
      - name: Access GOOGLE_SERVICES_JSON_DEV
        run: echo $GOOGLE_SERVICES_JSON_DEV   | base64 --decode --ignore-garbage > ./app/google-services.json
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Lint
        run: ./gradlew lint

  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Access SPOTIFY_CLIENT_ID
        run: echo $SPOTIFY_CLIENT_ID | base64 --decode --ignore-garbage > ./local.properties
      - name: Access GOOGLE_SERVICES_JSON_DEV
        run: echo $GOOGLE_SERVICES_JSON_DEV   | base64 --decode --ignore-garbage > ./app/google-services.json
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run test
        run: ./gradlew testDebug

  deploy:

    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Access SPOTIFY_CLIENT_ID
        run: echo $SPOTIFY_CLIENT_ID | base64 --decode --ignore-garbage > ./local.properties
      - name: Access GOOGLE_SERVICES_JSON_DEV
        run: echo $GOOGLE_SERVICES_JSON_DEV   | base64 --decode --ignore-garbage > ./app/google-services.json
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Release Build
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > release.keystore
          export KEYSTORE_PASSWORD="${{ secrets.KEYSTORE_PASSWORD }}"
          export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
          export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          ./gradlew assembleRelease
      - name: Get apk path
        id: apk-path
        run: |
          path=$(find **/build/outputs/apk -name '*.apk' -type f | head -1)
          echo "::set-output name=path::$path"
      - name: Deploy Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.1.1
        with:
          appId: ${{secrets.FIREBASE_DEV_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: developer
          file: ${{ steps.apk-path.outputs.path }}